# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'video1.ui'
#
# Created by: PyQt5 UI code generator 5.9
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(800, 601)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_now_playing = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_now_playing.setFont(font)
        self.label_now_playing.setTextFormat(QtCore.Qt.AutoText)
        self.label_now_playing.setObjectName("label_now_playing")
        self.horizontalLayout.addWidget(self.label_now_playing)
        self.inspector = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inspector.sizePolicy().hasHeightForWidth())
        self.inspector.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("gtk-info.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.inspector.setIcon(icon)
        self.inspector.setIconSize(QtCore.QSize(64, 64))
        self.inspector.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.inspector.setObjectName("inspector")
        self.horizontalLayout.addWidget(self.inspector)
        self.loadnew = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loadnew.sizePolicy().hasHeightForWidth())
        self.loadnew.setSizePolicy(sizePolicy)
        self.loadnew.setFocusPolicy(QtCore.Qt.TabFocus)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("tag-new.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.loadnew.setIcon(icon1)
        self.loadnew.setIconSize(QtCore.QSize(64, 64))
        self.loadnew.setPopupMode(QtWidgets.QToolButton.DelayedPopup)
        self.loadnew.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.loadnew.setAutoRaise(False)
        self.loadnew.setArrowType(QtCore.Qt.NoArrow)
        self.loadnew.setObjectName("loadnew")
        self.horizontalLayout.addWidget(self.loadnew)
        self.next = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.next.sizePolicy().hasHeightForWidth())
        self.next.setSizePolicy(sizePolicy)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("edit-delete.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.next.setIcon(icon2)
        self.next.setIconSize(QtCore.QSize(64, 64))
        self.next.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.next.setObjectName("next")
        self.horizontalLayout.addWidget(self.next)
        self.start = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.start.sizePolicy().hasHeightForWidth())
        self.start.setSizePolicy(sizePolicy)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("media-playback-start.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.start.setIcon(icon3)
        self.start.setIconSize(QtCore.QSize(64, 64))
        self.start.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.start.setObjectName("start")
        self.horizontalLayout.addWidget(self.start)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.nextPlaying = QtWidgets.QLabel(self.centralwidget)
        self.nextPlaying.setEnabled(True)
        self.nextPlaying.setObjectName("nextPlaying")
        self.verticalLayout.addWidget(self.nextPlaying)
        self.table_videos = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(7)
        sizePolicy.setHeightForWidth(self.table_videos.sizePolicy().hasHeightForWidth())
        self.table_videos.setSizePolicy(sizePolicy)
        self.table_videos.setMinimumSize(QtCore.QSize(100, 100))
        self.table_videos.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.table_videos.setStyleSheet("view->horizontalHeader()->setResizeMode(QHeaderView::Stretch)")
        self.table_videos.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.table_videos.setFrameShadow(QtWidgets.QFrame.Plain)
        self.table_videos.setProperty("showDropIndicator", True)
        self.table_videos.setDragEnabled(True)
        self.table_videos.setDragDropOverwriteMode(False)
        self.table_videos.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.table_videos.setDefaultDropAction(QtCore.Qt.TargetMoveAction)
        self.table_videos.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.table_videos.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.table_videos.setShowGrid(True)
        self.table_videos.setCornerButtonEnabled(True)
        self.table_videos.setRowCount(0)
        self.table_videos.setColumnCount(3)
        self.table_videos.setObjectName("table_videos")
        item = QtWidgets.QTableWidgetItem()
        self.table_videos.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_videos.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_videos.setHorizontalHeaderItem(2, item)
        self.table_videos.horizontalHeader().setVisible(True)
        self.table_videos.horizontalHeader().setCascadingSectionResizes(True)
        self.table_videos.horizontalHeader().setDefaultSectionSize(200)
        self.table_videos.horizontalHeader().setHighlightSections(False)
        self.table_videos.horizontalHeader().setStretchLastSection(True)
        self.table_videos.verticalHeader().setVisible(True)
        self.table_videos.verticalHeader().setHighlightSections(True)
        self.table_videos.verticalHeader().setStretchLastSection(False)
        self.verticalLayout.addWidget(self.table_videos)
        self.verticalLayout.setStretch(0, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menuBar.setObjectName("menuBar")
        self.menuVideo_Queuer = QtWidgets.QMenu(self.menuBar)
        self.menuVideo_Queuer.setObjectName("menuVideo_Queuer")
        MainWindow.setMenuBar(self.menuBar)
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.menuVideo_Queuer.addAction(self.actionHelp)
        self.menuVideo_Queuer.addAction(self.actionAbout)
        self.menuVideo_Queuer.addAction(self.actionQuit)
        self.menuBar.addAction(self.menuVideo_Queuer.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Video Scheduling Utility by KVK"))
        self.label_now_playing.setText(_translate("MainWindow", "Playing <File Name>"))
        self.inspector.setText(_translate("MainWindow", "Inspect"))
        self.loadnew.setText(_translate("MainWindow", "Load New"))
        self.next.setText(_translate("MainWindow", "Next"))
        self.start.setText(_translate("MainWindow", "Play"))
        self.nextPlaying.setText(_translate("MainWindow", " Next Playing: <File Name> in 1:10"))
        self.table_videos.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.table_videos.setSortingEnabled(False)
        item = self.table_videos.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Video File"))
        item.setToolTip(_translate("MainWindow", "Video file to be played"))
        item = self.table_videos.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Time Video Will Be Played"))
        item.setToolTip(_translate("MainWindow", "Time video will be played. Ex: 8:35:20"))
        item = self.table_videos.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Time In Between Videos"))
        item.setToolTip(_translate("MainWindow", "Leave blank for infinite delay"))
        self.menuVideo_Queuer.setTitle(_translate("MainWindow", "Video Queuer"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

